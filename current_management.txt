
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\

FLOW OF CODING :

NLP : 
TOOLS - SPACY, GENSIM 
LSA  LDA, TOPIC MODELLING [+ maths ]
STANDARD PROJECTS :  [GENERTAING TEXT , IMAGE CAPTION ETC]
TRANSFORMERS [+MATH]
All this in pytorch till standard projects 


CV :
PYTORCH 
GANS AUTOENCODERS
Vision transformers, stable diffusion 
Transfer learning models 



MLOPS [+INTEGRATING WITH FRONTEND]
LLMS 
RL 
Timer Series 
Recommendation systems [user based , item based etc]

web 
cybersecurity 


May leave full [‚ö†Ô∏è‚ö†Ô∏è‚ö†Ô∏è RESEARCH AHEAD]

1) Pytorch research papers [advanced][this will take a lot of time for NLP and CV so leave it and move to other fields ,we will continue this but not now or may be not continue this  ] 
2) [READ ML-DL-BROAD Books ]
3) Graph Neural Networks 
4) self supervised Learnings 


||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||\


 **AUTO ENCODERS PLAYLIST / TRSUTED SRC NOT FOUND YET if found save it in yt not in grayjay and mention in plan accoridingly
 **LLMS  PLAYLIST / TRSUTED SRC NOT FOUND YET if found save it in yt not in grayjay and mention in plan accoridingly


### Image Path :  C:/Users/RISHABH/Pictures/images/<image>
### Data Path :  C:/codes/machineL/data

### Installing tf 1.x :  pip3 install https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.14.0-py3-none-any.whl
### Installing tf 1.15 : pip install https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.15.0-py3-none-any.whl
### Installing tf 1.18 :  pip install https://storage.googleapis.com/tensorflow/mac/cpu/tensorflow-1.18.0-py3-none-any.whl
### Tensorflow wheel files : https://github.com/fo40225/tensorflow-windows-wheel/blob/master/1.6.0/py36/CPU/sse2/tensorflow-1.6.0-cp36-cp36m-win_amd64.whl

SYMBOLS :  üî¥  ‚úî  üü¢   üü° ‚ùå


* OpenCV Manipualtion Techniques üü¢
* RegExp 
* Subplots 


COMPUTER VISION TOPICS : OCR TESSERACT : NLP  +  COMPUTER VISION  üü°
                       :  overfitting and underfitting üü¢
                       : Learning rates , schedulers , decays üü¢
                       : Checking different optimziers like sgd , adam , rmsprop  üü¢
                       : Model CheckPoints  üü¢
                       : Batch Normalization üü¢
                       : Tranfer Learning : [LeNet , VGGNet ] üü¢
                       : Saving and Loading Models  || Model Visualization üü¢
                       : data annotation and labelling  üü¢
                       : FACE RECOGNITION : DeepFace , FaceNET on custom datasets  , MTCNN  üü¢
                       : GANS  => code with aarohi english channe; üî¥
                       : diffusion models (after dl/ml/gans/trans/) üî¥
                       : AutoEncoders üî¥
                       : Transformers  (campusx after 67  +  code with aarohi vision transformer playlist ) üî¥
                       : Vision Transformers üî¥
                       : INSTANCE SEGMENTATION :  MASK WALA R-CNN (SKIP) , only => YolAct does not have much tutorials available but you can try  ‚úî
                       : MEDIAPIPE , YOLO  üü¢


5)  Model Building on different dataset üü¢

0) :  webrtc with live smile detection complete  üü¢

 

For Embedding : https://www.youtube.com/watch?v=JgnbwKnHMZQ&list=PLKnIA16_RmvYuZauWaPlRTC54KxSNLtNn&index=57&t=163s
NLP TOPICS : tokenization , padding  üü¢   => (padding , multihot-encode )
           : Next Word prediction  üü¢
           : RegExp and cleaning texts  üü¢
           :  Embeddings  üü¢
           : Loading models from tensorflow-hub ‚ùå
           :  RNNS/LSTMS   üü¢
           : preatrained LSTMS embeddings like GLOVE  üü¢
           : IMDB classification || reuters  :  üü¢ 
           : Topic Modelling
           : Visualizing the Embeddings  üü¢
           : Conv1D üü¢



DEVOPS / MLOPS TOPICS : Pydantic üü¢
                      : Fast API üü¢
                      : docker 
                      :  redis 
                      : mlflow ::  exp tracking  || weights&biases for deep learning models 
                      : Pytest 
                      : SQL Alchemy
                      : prometheus  + grafana [model monitoring ]
                      :  Render deployemnt 
                      : Github Actions [CI / CD pipeline ]
                      : AWS EC2 deployment [+ASG ||  kubernetes] || google cloud || azure 
                      : Automation using DVC pipeline  || airflow || kuberflow 
                      : rolling update [deployement statergies ]
                      : sagemaker 
                      : kafka 





token : pypi-AgEIcHlwaS5vcmcCJGVhZDQ1YTgzLWJhZDEtNDBlMC1iNThiLWY2NjM1ZGE5OTliMAACEVsxLFsic2VlZHRvb2xzIl1dAAIsWzIsWyJkNjI5ZGIzNC01ZDc4LTQ1YmItYThhYS1iNjAyODkxY2M3MGIiXV0AAAYgLD1iGpOsWIf6zaV4h1RUqyLQODPgbPsLvZ1h08pm6bk





üîπ Free / Low-Cost RAG Setup ‚Äì Summary
Use open-source LLMs (e.g., LLaMA 3, Mistral, Falcon) instead of paid APIs.
Use free vector databases like FAISS or ChromaDB for retrieval.

üîπ Key Points about LLMs
Examples: GPT‚Äë4, Claude, LLaMA 3, Mistral, Falcon, Gemini
Main Capabilities:
Text generation (chat, articles, code)
Summarization, rewriting
Q&A and reasoning
Translation
Training: Trained on billions of words from books, sites, etc
Architecture: Based on Transformer models (like GPT, BERT, T5).
Free/Open-Source Models: Meta LLaMA 3, Mistral, Falcon, RedPajama.




### WEB DEVELOPMENT : 

    1) Ui Brain Technologies :  Typescript, ajax , Mean stack 
    2) WebDevSimplified :  NextJs Projects 
    3) NetNinja :  many tech surface level
    4) GreatStack : Full stack ,JS, React Projects 
    5) JavaScript Mastery :  Next, React , Full stack projects but I don‚Äôt like it 
    6) Codesistency :  Next, React Projects 
    7) Code Step By step:  Vibe of a prof 
    8) Thapa Technical : he hi badiya kya bolna 
    9)  LearnCode.academy -  for javascript bahut badiya 
    10)  Dave Gray -  good playlist of Next js 


NLP ROADMAP 


https://www.geeksforgeeks.org/nlp/natural-language-processing-nlp-tutorial/

